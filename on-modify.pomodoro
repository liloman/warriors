#!/usr/bin/env python
################################################################################
#
# Copyright 2016, liloman
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included
# in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
# OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
# THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.
#
# http://www.opensource.org/licenses/mit-license.php
#
################################################################################

import sys
import json
import os

# Hook to detect whether it is a stop or a start job
# and update the pomodoro-trayicon according to it

# Make no changes to the task, simply observe.
old = json.loads(sys.stdin.readline())
new = json.loads(sys.stdin.readline())
print(json.dumps(new))

if 'project' in new:
    project = new['project']

if 'description' in new:
    desc = new['description']

#If launched from the gui then exit to not loop
nohook = "/dev/shm/pomodoro.onhook"
if os.path.exists(nohook):
    print "From gui"
    sys.exit(0)

# Started task.
if 'start' in new and not 'start' in old:
    os.system('pomodoro-client.sh dry_start')

# Stopped task.
elif not 'start' in new and 'start' in old:
    os.system('pomodoro-client.sh dry_stop')

